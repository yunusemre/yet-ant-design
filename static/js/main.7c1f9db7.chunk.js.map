{"version":3,"sources":["assets/arrow.svg","components/Select/index.jsx","components/charts/BarChart/index.jsx","components/charts/BarChart2/index.jsx","Charts.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","Option","Select","SelectBox","props","suffixIcon","src","Arrow","alt","width","value","BarChart","margin","config","meta","key","alias","forceFit","data","color","padding","xField","yField","style","title","BarChartOther","year","type","stackField","Charts","className","marks","0","10","20","30","40","50","60","70","80","90","100","App","defaultValue","placeholder","Group","dots","range","step","min","max","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+FAAAA,EAAOC,QAAU,IAA0B,mC,8PCKnCC,G,OAAWC,IAAXD,QAWOE,EATG,SAACC,GAAD,OAChB,oCACE,kBAAC,IAAD,iBAAYA,EAAZ,CAAmBC,WAAY,yBAAKC,IAAKC,IAAOC,IAAI,QAAQC,MAAM,SAChE,kBAACR,EAAD,CAAQS,MAAM,QAAd,wBACA,kBAACT,EAAD,CAAQS,MAAM,QAAd,2B,kBCmCSC,EA1CE,SAAC,GAAuB,IAArBF,EAAoB,EAApBA,MAAOG,EAAa,EAAbA,OAuBnBC,EAAS,CACbC,KAAM,CACJC,IAAK,CAAEC,MAAO,SACdN,MAAO,CAAEM,MAAO,QAElBC,UAAU,EACVC,KA5BW,CACX,CACEH,IAAK,KACLL,MAAO,IAET,CACEK,IAAK,KACLL,MAAO,KAET,CACEK,IAAK,KACLL,MAAO,KAET,CACEK,IAAK,KACLL,MAAO,KAET,CACEK,IAAK,KACLL,MAAO,MAUTS,MAAO,CAAC,WACRC,QAAS,OACTC,OAAQ,MACRC,OAAQ,SAEV,OACE,kBAAC,IAAD,CAAMC,MAAO,CAAEd,QAAOG,UAAUY,MAAM,OACpC,kBAAC,IAAWX,KCoHHY,EAzJO,SAAC,GAAuB,IAArBhB,EAAoB,EAApBA,MAAOG,EAAa,EAAbA,OAqIxBC,EAAS,CACbC,KAAM,CACJC,IAAK,CAAEC,MAAO,SACdN,MAAO,CAAEM,MAAO,QAElBC,UAAU,EACVC,KA1IW,CACX,CACEQ,KAAM,OACNC,KAAM,QACNjB,MAAO,IAET,CACEgB,KAAM,OACNC,KAAM,UACNjB,MAAO,IAET,CACEgB,KAAM,OACNC,KAAM,QACNjB,MAAO,GAET,CACEgB,KAAM,OACNC,KAAM,UACNjB,MAAO,GAET,CACEgB,KAAM,OACNC,KAAM,UACNjB,MAAO,IAET,CACEgB,KAAM,OACNC,KAAM,QACNjB,MAAO,IAET,CACEgB,KAAM,OACNC,KAAM,UACNjB,MAAO,GAET,CACEgB,KAAM,OACNC,KAAM,QACNjB,MAAO,GAET,CACEgB,KAAM,OACNC,KAAM,QACNjB,MAAO,GAET,CACEgB,KAAM,OACNC,KAAM,QACNjB,MAAO,IAET,CACEgB,KAAM,OACNC,KAAM,UACNjB,MAAO,GAET,CACEgB,KAAM,OACNC,KAAM,QACNjB,MAAO,GAET,CACEgB,KAAM,OACNC,KAAM,QACNjB,MAAO,GAET,CACEgB,KAAM,OACNC,KAAM,QACNjB,MAAO,IAET,CACEgB,KAAM,OACNC,KAAM,UACNjB,MAAO,GAET,CACEgB,KAAM,OACNC,KAAM,QACNjB,MAAO,GAET,CACEgB,KAAM,OACNC,KAAM,QACNjB,MAAO,GAET,CACEgB,KAAM,OACNC,KAAM,QACNjB,MAAO,IAET,CACEgB,KAAM,OACNC,KAAM,UACNjB,MAAO,GAET,CACEgB,KAAM,OACNC,KAAM,QACNjB,MAAO,GAET,CACEgB,KAAM,OACNC,KAAM,QACNjB,MAAO,GAET,CACEgB,KAAM,OACNC,KAAM,UACNjB,MAAO,IAET,CACEgB,KAAM,OACNC,KAAM,UACNjB,MAAO,GAET,CACEgB,KAAM,OACNC,KAAM,QACNjB,MAAO,GAET,CACEgB,KAAM,OACNC,KAAM,UACNjB,MAAO,GAET,CACEgB,KAAM,OACNC,KAAM,UACNjB,MAAO,KAUTkB,WAAY,OACZT,MAAO,CAAC,UAAW,WACnBC,QAAS,OACTC,OAAQ,OACRC,OAAQ,SAEV,OACE,kBAAC,IAAD,CAAMC,MAAO,CAAEd,QAAOG,UAAUY,MAAM,OACpC,kBAAC,IAAkBX,KC9IVgB,EAPA,kBACb,yBAAKC,UAAU,UACb,kBAAC,EAAD,CAAUrB,MAAM,MAAMG,OAAO,SAC7B,kBAAC,EAAD,CAAeH,MAAM,MAAMG,OAAO,WCChCmB,EAAQ,CACZC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,IAAK,OAoDQC,MAjDf,WACE,OACE,yBAAKb,UAAU,OACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,aACb,kBAAC,EAAD,CAAWc,aAAa,UAE1B,yBAAKd,UAAU,aACb,kBAAC,IAAD,CAAOe,YAAY,eAErB,yBAAKf,UAAU,aACb,kBAAC,IAAD,OAEF,yBAAKA,UAAU,aACb,kBAAC,IAAMgB,MAAP,KACE,kBAAC,IAAD,CAAOpC,MAAO,GAAd,KACA,kBAAC,IAAD,CAAOA,MAAO,GAAd,KACA,kBAAC,IAAD,CAAOA,MAAO,GAAd,KACA,kBAAC,IAAD,CAAOA,MAAO,GAAd,OAGJ,yBAAKoB,UAAU,aACb,kBAAC,IAASgB,MAAV,KACE,kBAAC,IAAD,CAAUpC,MAAM,KAAhB,KACA,kBAAC,IAAD,CAAUA,MAAM,KAAhB,KACA,kBAAC,IAAD,CAAUA,MAAM,KAAhB,OAGJ,yBAAKoB,UAAU,aACb,kBAAC,IAAD,CAAQH,KAAK,WAAb,cAEF,yBAAKG,UAAU,aACb,kBAAC,IAAD,mBAEF,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAQiB,MAAI,EAACC,OAAK,EAACvC,MAAO,IAAKwC,KAAM,EAAGlB,MAAOA,EAAOa,aAAc,CAAC,GAAI,OAE3E,6BACA,yBAAKd,UAAU,aACb,kBAAC,IAAD,CAAQiB,MAAI,EAACE,KAAM,EAAGlB,MAAOA,EAAOmB,IAAK,EAAGC,IAAK,IAAK1C,MAAO,IAAKmC,aAAc,OAGpF,yBAAKd,UAAU,WACb,kBAAC,EAAD,SCpDYsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7c1f9db7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.b5c11bc4.svg\";","import React from 'react';\nimport { Select } from 'antd';\nimport Arrow from '../../assets/arrow.svg';\nimport './index.scss';\n\nconst { Option } = Select;\n\nconst SelectBox = (props) => (\n  <>\n    <Select {...props} suffixIcon={<img src={Arrow} alt=\"arrow\" width=\"10\" />}>\n      <Option value=\"jack\">Dropdown menu item 1</Option>\n      <Option value=\"lucy\">Dropdown menu item 2</Option>\n    </Select>\n  </>\n);\n\nexport default SelectBox;\n","import React from 'react';\nimport { Column } from '@ant-design/charts';\nimport { Card } from 'antd';\n\nconst BarChart = ({ width, margin }) => {\n  const data = [\n    {\n      key: '10',\n      value: 50,\n    },\n    {\n      key: '20',\n      value: 350,\n    },\n    {\n      key: '30',\n      value: 250,\n    },\n    {\n      key: '40',\n      value: 150,\n    },\n    {\n      key: '50',\n      value: 850,\n    },\n  ];\n  const config = {\n    meta: {\n      key: { alias: 'Value' },\n      value: { alias: 'Key' },\n    },\n    forceFit: true,\n    data,\n    color: ['#b3b3b3'],\n    padding: 'auto',\n    xField: 'key',\n    yField: 'value',\n  };\n  return (\n    <Card style={{ width, margin }} title=\"Yet\">\n      <Column {...config} />\n    </Card>\n  );\n};\n\nexport default BarChart;\n","import React from 'react';\nimport { StackedColumn } from '@ant-design/charts';\nimport { Card } from 'antd';\n\nconst BarChartOther = ({ width, margin }) => {\n  const data = [\n    {\n      year: '2006',\n      type: 'pears',\n      value: 10,\n    },\n    {\n      year: '2006',\n      type: 'oranges',\n      value: 15,\n    },\n    {\n      year: '2006',\n      type: 'pears',\n      value: 9,\n    },\n    {\n      year: '2006',\n      type: 'oranges',\n      value: 6,\n    },\n    {\n      year: '2007',\n      type: 'oranges',\n      value: 12,\n    },\n    {\n      year: '2007',\n      type: 'pears',\n      value: 18,\n    },\n    {\n      year: '2007',\n      type: 'oranges',\n      value: 9,\n    },\n    {\n      year: '2007',\n      type: 'pears',\n      value: 4,\n    },\n    {\n      year: '2008',\n      type: 'pears',\n      value: 5,\n    },\n    {\n      year: '2008',\n      type: 'pears',\n      value: 20,\n    },\n    {\n      year: '2008',\n      type: 'oranges',\n      value: 8,\n    },\n    {\n      year: '2008',\n      type: 'pears',\n      value: 2,\n    },\n    {\n      year: '2009',\n      type: 'pears',\n      value: 1,\n    },\n    {\n      year: '2009',\n      type: 'pears',\n      value: 15,\n    },\n    {\n      year: '2009',\n      type: 'oranges',\n      value: 5,\n    },\n    {\n      year: '2009',\n      type: 'pears',\n      value: 4,\n    },\n    {\n      year: '2010',\n      type: 'pears',\n      value: 2,\n    },\n    {\n      year: '2010',\n      type: 'pears',\n      value: 10,\n    },\n    {\n      year: '2010',\n      type: 'oranges',\n      value: 4,\n    },\n    {\n      year: '2010',\n      type: 'pears',\n      value: 2,\n    },\n    {\n      year: '2011',\n      type: 'pears',\n      value: 3,\n    },\n    {\n      year: '2011',\n      type: 'oranges',\n      value: 12,\n    },\n    {\n      year: '2011',\n      type: 'oranges',\n      value: 6,\n    },\n    {\n      year: '2011',\n      type: 'pears',\n      value: 3,\n    },\n    {\n      year: '2012',\n      type: 'oranges',\n      value: 4,\n    },\n    {\n      year: '2012',\n      type: 'oranges',\n      value: 15,\n    },\n  ];\n  const config = {\n    meta: {\n      key: { alias: 'Value' },\n      value: { alias: 'Key' },\n    },\n    forceFit: true,\n    data,\n    stackField: 'type',\n    color: ['#e1e1e1', '#b3b3b3'],\n    padding: 'auto',\n    xField: 'year',\n    yField: 'value',\n  };\n  return (\n    <Card style={{ width, margin }} title=\"Yet\">\n      <StackedColumn {...config} />\n    </Card>\n  );\n};\n\nexport default BarChartOther;\n","import React from 'react';\nimport { BarChart, BarChartOther } from './components/charts';\n\nconst Charts = () => (\n  <div className=\"charts\">\n    <BarChart width=\"30%\" margin=\"10px\" />\n    <BarChartOther width=\"30%\" margin=\"10px\" />\n  </div>\n);\n\nexport default Charts;\n","import React from 'react';\nimport {\n  Input, Switch, Radio, Checkbox, Button, Slider,\n} from 'antd';\nimport SelectBox from './components/Select';\nimport Charts from './Charts';\n\nconst marks = {\n  0: '0',\n  10: '10',\n  20: '20',\n  30: '30',\n  40: '40',\n  50: '50',\n  60: '60',\n  70: '70',\n  80: '80',\n  90: '90',\n  100: '100',\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"sidebar\">\n        <div className=\"component\">\n          <SelectBox defaultValue=\"lucy\" />\n        </div>\n        <div className=\"component\">\n          <Input placeholder=\"Textbox 1\" />\n        </div>\n        <div className=\"component\">\n          <Switch />\n        </div>\n        <div className=\"component\">\n          <Radio.Group>\n            <Radio value={1}>A</Radio>\n            <Radio value={2}>B</Radio>\n            <Radio value={3}>C</Radio>\n            <Radio value={4}>D</Radio>\n          </Radio.Group>\n        </div>\n        <div className=\"component\">\n          <Checkbox.Group>\n            <Checkbox value=\"A\">A</Checkbox>\n            <Checkbox value=\"B\">B</Checkbox>\n            <Checkbox value=\"C\">C</Checkbox>\n          </Checkbox.Group>\n        </div>\n        <div className=\"component\">\n          <Button type=\"primary\">Calculate</Button>\n        </div>\n        <div className=\"component\">\n          <Button>Calculate</Button>\n        </div>\n        <div className=\"component\">\n          <Slider dots range width={400} step={2} marks={marks} defaultValue={[26, 37]} />\n        </div>\n        <br />\n        <div className=\"component\">\n          <Slider dots step={2} marks={marks} min={0} max={100} width={400} defaultValue={20} />\n        </div>\n      </div>\n      <div className=\"content\">\n        <Charts />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'antd/dist/antd.css';\nimport './scss/app.scss';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}